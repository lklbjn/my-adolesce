<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.adolesce.cloud.db.mapper.BatisUserXmlMapper">
    <!-- 通用查询映射结果 -->
    <resultMap id="BatisUserMap" type="com.adolesce.cloud.dubbo.domain.db.BatisUser">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="age" property="age"/>
        <result column="email" property="email"/>
        <result column="birthday" property="birthday"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <!-- 描述集合属性 -->
        <collection property="addresses" ofType="com.adolesce.cloud.dubbo.domain.db.BatisAddress">
            <id column="aid" property="id"/>
            <result column="province"  property="province"/>
            <result column="city" property="city"/>
            <result column="area" property="area"/>
        </collection>
    </resultMap>

    <resultMap id="BatisAddressMap" type="com.adolesce.cloud.dubbo.domain.db.BatisAddress" >
        <id column="aid" property="id"/>
        <result column="province" property="province"/>
        <result column="city" property="city"/>
        <result column="area" property="area"/>
        <!-- 单个对象的引用 -->
        <!--<association property="user" javaType="com.adolesce.cloud.dubbo.domain.db.BatisUser">
            <id column="id" property="id"/>
            <result column="user_name" property="userName"/>
            <result column="password" property="password"/>
            <result column="name" property="name"/>
            <result column="age" property="age"/>
            <result column="email" property="email"/>
            <result column="birthday" property="birthday"/>
            <result column="create_time" property="createTime"/>
            <result column="update_time" property="updateTime"/>
        </association>-->
        <!--或-->
        <association property="user" javaType="com.adolesce.cloud.dubbo.domain.db.BatisUser" resultMap="BatisUserMap"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_name, password, name, age, email, birthday, create_time, update_time
    </sql>

    <insert id="insert" parameterType="com.adolesce.cloud.dubbo.domain.db.BatisUser">
        INSERT INTO my_batis_user ( user_name, password, name, age, email, birthday, create_time, update_time)
        VALUES (#{userName}, #{password}, #{name}, #{age},#{email},#{birthday},#{createTime},#{updateTime})
    </insert>

    <!--collection 取值可以为: list(java代码对应为集合)、array(java代码对应为数组)、map的key值(java代码对应为Map，value为集合或数组)-->
    <insert id="batchInsert" parameterType="List">
        INSERT INTO
            my_batis_user (user_name, password, name, age, email, birthday, create_time, update_time) VALUES
        <foreach collection="list" item="user" separator=",">
            (#{user.userName},#{user.password},#{user.name},#{user.age},#{user.email},#{user.birthday},#{user.createTime},#{user.updateTime})
        </foreach>
    </insert>

    <delete id="deleteById" parameterType="Long">
        DELETE
        FROM my_batis_user
        WHERE id = #{id}
    </delete>

    <delete id="deleteByIds" parameterType="map">
        DELETE FROM
        my_batis_user
        <if test="ids.size >0">
            WHERE
            id IN
            <foreach collection="ids" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </delete>

    <delete id="deleteByIdsStr" parameterType="String">
        DELETE
        FROM my_batis_user
        WHERE FIND_IN_SET(id, #{ids})
    </delete>

    <update id="update" parameterType="com.adolesce.cloud.dubbo.domain.db.BatisUser">
        UPDATE
        my_batis_user
        <set>
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
                age = #{age},
            <if test="email != null">
                email = #{email},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <select id="getById" parameterType="Long" resultMap="BatisUserMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM my_batis_user
        WHERE id = #{id}
    </select>

    <select id="queryByParam" parameterType="com.adolesce.cloud.dubbo.domain.db.BatisUser" resultMap="BatisUserMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM my_batis_user
        <where>
            <if test="userName != null and userName !=''">
                <!--AND user_name like CONCAT('%' ,#{userName}, '%')-->
                AND user_name like '%${userName}%'
            </if>
            <if test="password != null and password !=''">
                AND pass_word = #{password}
            </if>
            <if test="startTime != null and startTime !=''">
                AND DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime !=''">
                AND DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') &lt;= #{endTime}
            </if>
            <choose>
                <when test="birthday != null">
                    AND DATE_FORMAT(birthday,'%Y-%m-%d') = #{birthdayStr}
                </when>
                <when test="birthday == null">
                </when>
                <otherwise>
                    AND age = #{age}
                </otherwise>
            </choose>
        </where>
    </select>

    <select id="queryPageByName" resultType="com.adolesce.cloud.dubbo.domain.db.BatisUser">
        SELECT `user`.*,record.card_no FROM my_batis_user `user`
        INNER JOIN my_member_record record ON `user`.`name` = record.`client_name`
        WHERE `user`.name LIKE CONCAT('%',#{name},'%')
    </select>

    <select id="selectBatisUserByParams" parameterType="map" resultMap="BatisUserMap">
        select u.*,a.id as aid,a.province,a.city,a.area
        from my_batis_user as u left join my_batis_address a
        on  u.id = a.userid
        <where>
            <if test="id != null and id !='' ">
                and u.id = #{id}
            </if>
        </where>
    </select>

    <select id="selectBatisAddressByParams" parameterType="map" resultMap="BatisAddressMap">
        select u.*,a.id as aid,a.province,a.city,a.area
        from my_batis_address a left join my_batis_user u
        on  a.userid = u.id
        <where>
            <if test="id != null and id !='' ">
                and a.id = #{id}
            </if>
        </where>
    </select>
</mapper>